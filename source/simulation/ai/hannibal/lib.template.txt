  H.LIB.XXXXXX = function(context){

    H.extend(this, {

      name:    "XXXXXX",
      context: context,
      imports: [
        ""
      ],

    });

  };

  H.LIB.XXXXXX.prototype = {
    constructor: H.LIB.XXXXXX,
    log: function(){},
    initialize: function(){
      this.childs.forEach( child => {
        if (!this[child]){
          this[child] = new H.LIB[H.noun(child)](this.context)
            .import()
            .initialize();
        }
      });
    },
    deserialize: function(){
      if (this.context.data[this.name]){
        this.childs.forEach( child => {
          if (this.context.data[this.name][child]){
            this[child] = new H.LIB[H.noun(child)](this.context)
              .import()
              .initialize(this.context.data[this.name][child]);
          }
        });
      }
    },
    clone: function(context){
      context.data[this.name] = this.serialize();
      return new H.LIB[H.noun(this.name)](context);
    },
    clone: function(context){
      return (
        new H.LIB[H.noun(this.name)](context)
          .import()
          .initialize(this.serialize());
      );
    },
    import: function(){
      this.imports.forEach(imp => this[imp] = this.context[imp]);
      return this;
    },
    deserialize: function(){
      return {};
    },
    activate: function(){},
    tick: function(tick, secs){

      var t0 = Date.now();


      return Date.now() - t0;

    },

  };